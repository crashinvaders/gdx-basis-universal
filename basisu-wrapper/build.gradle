apply plugin: 'java-library'

sourceCompatibility = 8.0
targetCompatibility = 8.0
compileJava.options.incremental = true

sourceSets.main.java.srcDirs += ['src/']
sourceSets.main.resources.srcDirs += ['libs/', 'resources/']
sourceSets.test.java.srcDirs += ['test/']

group 'com.crashinvaders.gdx-basis-universal'
version '0.1.0-SNAPSHOT'

dependencies {
    implementation files('libs/gdx-basis-universal-natives.jar')

    testImplementation 'junit:junit:4.13'
    testImplementation 'com.badlogicgames.gdx:gdx-jnigen-loader:2.0.0-SNAPSHOT'
}

test {
    useJUnit()
    maxHeapSize = '1G'
}

compileJava.options.headerOutputDirectory.set(file('jni'))

//gradle.taskGraph.whenReady {taskGraph ->
//    println "Found task graph: " + taskGraph
//    println "Found " + taskGraph.allTasks.size() + " tasks."
//    taskGraph.allTasks.forEach { task ->
//        println task
//        task.dependsOn.forEach { dep ->
//            println "  - " + dep
//        }
//    }
//}

//apply plugin: "com.badlogicgames.gdx.gdx-jnigen"
apply plugin: com.badlogic.gdx.jnigen.gradle.JnigenPlugin

jnigen {
    sharedLibName = 'gdx-basis-universal'

    nativeCodeGenerator {
        sourceDir = '/src'
        excludes = ['JniGenCompiler.java']
        includes = ['**/com/crashinvaders/basisu/wrapper/*.java']
    }

    all {
        headerDirs = ['src']
        cExcludes = cppExcludes = ['test/**', '.vscode/**', 'build/**',]

        cFlags += ' -fvisibility=hidden '
        cppFlags += ' -std=c++11 -fvisibility=hidden '
        linkerFlags += ' -fvisibility=hidden '
    }
    add(Windows, x32) {
        compilerPrefix = "mingw32-"
        compilerSuffix = ".exe"
    }
    add(Windows, x64) {
        compilerSuffix = ".exe"
    }
    add(Linux, x32)
    add(Linux, x64)
    add(Linux, x32, ARM)
    add(Linux, x64, ARM)
    add(MacOsX, x64)
    add(Android)
    add(IOS) {
        cppFlags += " -stdlib=libc++ "
    }
}