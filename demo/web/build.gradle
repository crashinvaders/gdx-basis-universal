apply plugin: 'java'
apply plugin: "gwt"
apply plugin: "war"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

sourceSets.main.java.srcDirs = [ "src" ]
sourceSets.main.resources.srcDirs += ['../assets']

gwt {
    gwtVersion = gwtLibVersion
    maxHeapSize = "1G"          // Default 256m is not enough for gwt compiler. GWT is HUNGRY
    minHeapSize = "1G"

    src = files(file('src/')) // Needs to be in front of "modules" below.
    modules 'com.crashinvaders.basisu.demo.GdxDefinition'
    devModules 'com.crashinvaders.basisu.demo.GdxDefinitionSuperdev'
    project.webAppDirName = 'webapp'

    compiler.strict = true
    compiler.disableCastChecking = true

//    logLevel = 'DEBUG'
}

dependencies {
    implementation project(':demo:core')
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
    implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"


    if (useGdxBasisuMavenArtifacts) {
        implementation "com.crashinvaders.basisu:basisu-gdx-gwt"
        implementation "com.crashinvaders.basisu:basisu-gdx-gwt:$gdxBasisuVersion:sources"
        implementation "com.crashinvaders.basisu:basisu-gdx:$gdxBasisuVersion:sources"
        implementation "com.crashinvaders.basisu:basisu-wrapper:$gdxBasisuVersion:sources"
        implementation "com.crashinvaders.basisu:basisu-wrapper:$gdxBasisuVersion:natives-web"
    } else {
        implementation project(':basisu-gdx-gwt')
        implementation files("${project(':basisu-wrapper').buildDir}/libs/basisu-wrapper-${gdxBasisuVersion}-natives-web.jar")
    }
}

def HttpFileServer server = null
def httpFilePort = 8080
task startHttpServer() {
    dependsOn draftCompileGwt
    String output = project.buildDir.path + "/gwt/draftOut"
    doLast {
        copy {
            from "webapp"
            into output
        }
        copy {
            from "war"
            into output
        }
        server = new SimpleHttpFileServerFactory().start(new File(output), httpFilePort)
        println "Server started in directory ${server.getContentRoot()}, http://localhost:${server.getPort()}/index.html"
    }
}

task superDev(type: org.wisepersist.gradle.plugins.gwt.GwtSuperDev) {
    dependsOn startHttpServer
    doFirst {
        gwt.modules = gwt.devModules
    }
}

task dist(dependsOn: [clean, compileGwt]) {
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
            }
        copy {
            from "war"
            into "build/dist"
        }
    }
}

task addSource {
    doLast {
        sourceSets.main.compileClasspath += files(project(':basisu-wrapper').sourceSets.main.allJava.srcDirs)
        sourceSets.main.compileClasspath += files(project(':basisu-gdx').sourceSets.main.allJava.srcDirs)
        sourceSets.main.compileClasspath += files(project(':basisu-gdx-gwt').sourceSets.main.allJava.srcDirs)
        sourceSets.main.compileClasspath += files(project(':demo:core').sourceSets.main.allJava.srcDirs)
    }
}
tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)